---
- name: Ensure the user specific App directories exist
  file:
    path: "{{ item }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0700'
    state: directory
  with_items:
    - ~/Apps/
    - ~/Apps/bin

- name: Create the unity application directories
  file:
    path: "{{ item }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0700'
    state: directory
  with_items:
    - ~/Apps/Unity
    - ~/Apps/Unity/Editors
    - ~/.config/UnityHub

- name: Download the Unity Hub AppImage
  get_url:
    url: https://public-cdn.cloud.unity3d.com/hub/prod/UnityHub.AppImage
    dest: ~/Apps/Unity/UnityHub.AppImage
    checksum: sha256:9aca948666196b2314f5a1bfe44b338a2404613e3911271b03bf6ac0f6341ab4
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0700'

- name: Check to see if the UnityHub configuration directory already exists
  stat:
    path: ~/.config/UnityHub
  register: unityhub_config_dir

- name: Create the UnityHub configuration
  template:
    src: "config/UnityHub/{{ item }}.j2"
    dest: "~/.config/UnityHub/{{ item }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0600'
  with_items:
    - secondaryInstallPath.json

- name: Link the unity hub binary to the application bin directory
  file:
    src: ~/Apps/Unity/UnityHub.AppImage
    dest: ~/Apps/bin/UnityHub
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    state: link

- name: Check to see if the UnityHub icon has already been fetched
  stat:
    path: ~/Apps/Unity/unityhub.png
  register: unityhub_appicon

- name: Extract the UnityHub app image to get the app icon
  command:
    cmd: ./UnityHub.AppImage --appimage-extract
    chdir: ~/Apps/Unity
  when: unityhub_appicon.stat.exists == false

- name: Copy the application icon
  copy:
    src: ~/Apps/Unity/squashfs-root/usr/share/icons/hicolor/48x48/apps/unityhub.png
    dest: ~/Apps/Unity/unityhub.png
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0600'
  when: unityhub_appicon.stat.exists == false

- name: Clean up the extracted application if it exists
  file:
    path: ~/Apps/Unity/squashfs-root
    state: absent

- name: Add UnityHub to the application launcher
  template:
    src: "local/share/applications/{{ item }}.j2"
    dest: "~/.local/share/applications/{{ item }}"
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: '0600'
  with_items:
    - UnityHub.desktop
