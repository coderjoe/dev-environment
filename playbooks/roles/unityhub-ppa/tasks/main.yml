---

- name: Create a temporary directory to store the downloaded unity key
  ansible.builtin.tempfile:
    state: directory
    suffix: unityhub_download_tmp
  register: unityhub_tempdir
  become: true

- name: Download the unity gpg package signing key
  ansible.builtin.get_url:
    url: "{{ unityhub_key_url }}"
    dest: "{{ unityhub_tempdir.path }}/unityhub.asc"
    checksum: "{{ unityhub_key_checksum }}"
  become: true

- name: Convert the unityhub key from armored to binary format
  ansible.builtin.shell:
    cmd: "gpg --dearmor --output {{ unityhub_tempdir.path }}/unityhub.gpg {{ unityhub_tempdir.path }}/unityhub.asc"
  become: true

- name: Copy the unityhub gpg key to the signing directory in binary format
  ansible.builtin.copy:
    src: "{{ unityhub_tempdir.path }}/unityhub.gpg"
    dest: "/usr/share/keyrings/unityhub-archive-keyring.gpg"
    remote_src: true
  become: true

- name: Add the unityhub apt repository
  ansible.builtin.apt_repository:
    repo: "deb [arch=amd64 signed-by=/usr/share/keyrings/unityhub-archive-keyring.gpg] https://hub.unity3d.com/linux/repos/deb stable main"
    filename: unityhub
    state: present
  become: true

- name: Force an apt-get update to parse the new key and policy information
  ansible.builtin.apt:
    update_cache: yes
  become: true
